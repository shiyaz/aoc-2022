local d06 = require "d06"
local util = require "util"

describe("day 6", function ()
  describe("part 1", function ()
    it("finds the marker in a datastream", function ()
      local streams = util.lines_from_file("d06a_test.txt")
      local m1, m1_end_pos = d06.start_of_packet_marker(streams[1])
      local m2, m2_end_pos = d06.start_of_packet_marker(streams[2])
      local m3, m3_end_pos = d06.start_of_packet_marker(streams[3])
      local m4, m4_end_pos = d06.start_of_packet_marker(streams[4])
      local m5, m5_end_pos = d06.start_of_packet_marker(streams[5])
      assert.are.equal("jpqm", m1)
      assert.are.equal(7, m1_end_pos)
      assert.are.equal("vwbj", m2)
      assert.are.equal(5, m2_end_pos)
      assert.are.equal("pdvj", m3)
      assert.are.equal(6, m3_end_pos)
      assert.are.equal("rfnt", m4)
      assert.are.equal(10, m4_end_pos)
      assert.are.equal("zqfr", m5)
      assert.are.equal(11, m5_end_pos)
    end)
    it("with actual input", function ()
      local streams = util.lines_from_file("d06_input.txt")
      local _, m_end_pos = d06.start_of_packet_marker(streams[1])
      assert.are.equal(1287, m_end_pos)
    end)
  end)
  describe("part 2", function ()
    it("with actual input", function ()
      local streams = util.lines_from_file("d06_input.txt")
      local m, m_end_pos = d06.start_of_message_marker(streams[1])
      assert.are.equal(3716, m_end_pos)
    end)
  end)
end)